def artifactory_server = Artifactory.server "artifactory"
def buildInfo = Artifactory.newBuildInfo()
buildInfo.env.capture = true

// If this job is triggered manually, these variables aren't created by GitLab plugin.
// Create them manually so that they'll at least be null.
def gitlabMergeRequestIid = gitlabMergeRequestIid ?: null
def gitlabTargetBranch = gitlabTargetBranch ?: null
def gitlabMergeRequestTargetProjectId = gitlabMergeRequestTargetProjectId ?:null
def gitlabMergeRequestTitle = gitlabMergeRequestTitle ?: null
def mergeREF = "merge-requests/${gitlabMergeRequestIid}/merge"

pipeline {
    agent any
    options {
        ansiColor('xterm')
        timestamps()
        timeout(time: 6, unit: 'HOURS')
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    parameters {
        string(name: 'REF',
               defaultValue: '\${gitlabBranch}',
               description: 'Commit to build')
    }

    stages {
        stage('Build & Test') {
            parallel {
                stage('CPU') {
                    steps {
                        build(job: 'spark/sparkmaster_cpu', parameters: [string(name: 'REF', value: mergeREF),
                        string(name: 'GITLAB_MERGE_REQUEST_IID', value: gitlabMergeRequestIid),
                        string(name: 'GITLAB_TARGET_BRANCH', value: gitlabTargetBranch),
                        string(name: 'GITLAB_MERGE_REQUEST_TARGET_PROJECT_ID', value: gitlabMergeRequestTargetProjectId)])
                    }
                }
                // stage('GPU') {
                //     when {
                //         expression { gitlabMergeRequestTitle ==~ ".*\\[GPU].*" }
                //     }
                //     steps {
                //         build job: 'spark/gpu', parameters: [string(name: 'REF', value: REF)],
                //         string(name: 'GITLAB_MERGE_REQUEST_IID', value: gitlabMergeRequestIid),
                //         string(name: 'GITLAB_TARGET_BRANCH', value: gitlabTargetBranch),
                //         string(name: 'GITLAB_MERGE_REQUEST_TARGET_PROJECT_ID', value: gitlabMergeRequestTargetProjectId)])
                //     }
                // }
            }
        }
    }

    post {
        always {
            script {
                artifactory_server.publishBuildInfo buildInfo
            }
        }
    }
}
