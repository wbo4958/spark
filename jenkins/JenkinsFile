pipeline {
    agent {
        docker {
            label 'docker'
            image 'openkbs/jre-mvn-py3'
            args '-v /root/.m2:/root/.m2'
        }
    }

    stages {

        stage('Build') {
            steps {

                updateGitlabCommitStatus(name: 'pipeline', state: 'running')

                updateGitlabCommitStatus(name: 'build', state: 'running')
                sh 'build/mvn -DskipTests  -Phadoop-2.7 -Pyarn -Phive -Phive-thriftserver -Pkubernetes clean package'

            }

            post {
                success {
                    updateGitlabCommitStatus(name: 'build', state: 'success')
                }
                failure {
                    updateGitlabCommitStatus(name: 'build', state: 'failed')
                }
            }
        }

        stage('Jenkins Tests') {
            steps {

                updateGitlabCommitStatus(name: 'JenkinsTests', state: 'running')
                sh 'build/mvn -Dtest=none -DwildcardSuites=org.apache.spark.util.VersionUtilsSuite test'
            }
            
            post {
                success {
                    updateGitlabCommitStatus(name: 'JenkinsTests', state: 'success')
                }
                failure {
                    updateGitlabCommitStatus(name: 'JenkinsTests', state: 'failed')
                }
            }
        }

    }

    post {
        always {
            echo 'cleaning up workspace'
            junit(testResults: 'core/target/surefire-reports/TEST-org.apache.*.xml', allowEmptyResults: 'true')
            addGitLabMRComment(comment: "https://ci-dev.ngcc.nvidia.com/job/SparkTest/${BUILD_NUMBER}/testReport/")
            deleteDir() /* clean up our workspace */
        }
        success {
            updateGitlabCommitStatus(name: 'pipeline', state: 'success')
            addGitLabMRComment(comment: "Pipeline is complete with no errors.")
        }
        failure {
            updateGitlabCommitStatus(name: 'pipeline', state: 'failed')
            addGitLabMRComment(comment: "Pipeline is complete with errors.")
        }
    }
}